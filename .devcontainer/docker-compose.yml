version: '3.7'

services:

  workspace:
    build:
      context: ./docker/workspace
      dockerfile: Dockerfile
      args:
        PHP_VERSION: "${PHP_VERSION:-8}"
        USERNAME: "${USERNAME:-vscode}"
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
        NODE_VERSION: "16"
    env_file: ../.env
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:3306:3306"
      - "127.0.0.1:5050:5050"
    init: true
    volumes:
      - ../:/var/www
    working_dir: /var/www
    command: sleep infinity

  nginx:
    build: ./docker/nginx
    env_file: ../.env
    volumes:
      - ./docker/nginx/config:/etc/nginx/conf.d/
      - ../.docker/data/nginx/log:/var/log/nginx
      - ../:/var/www
    depends_on:
      - php
    network_mode: service:workspace

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        PHP_VERSION: "${PHP_VERSION:-8}"
        USERNAME: "${USERNAME:-vscode}"
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
        XDEBUG_REMOTE_CONNECT_BACK: "${XDEBUG_REMOTE_CONNECT_BACK}"
        XDEBUG_REMOTE_PORT: "${XDEBUG_REMOTE_PORT}"
    env_file: ../.env
    volumes:
      - ../:/var/www
    working_dir: /var/www
    network_mode: service:workspace

  mariadb:
    image: mariadb:10.5
    env_file: ../.env
    volumes:
      - mariadb:/var/lib/mysql
      - ../.docker/data/mysql/log:/var/log/mysql
      - ./docker/mariadb/config/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      default:
        aliases:
          - mysql

  composer:
    restart: 'no'
    image: composer/composer
    command: install
    env_file: ../.env
    volumes:
      - ../:/var/www
    working_dir: /var/www

  # node:
  #   build: ./docker/node
  #   env_file: ../.env
  #   tty: true
  #   volumes:
  #     - ../:/var/www
  #   working_dir: /var/www

  # adminer:
  #   image: adminer
  #   restart: always
  #   network_mode: service:workspace

  # postgres:
  #   build: ./docker/postgres
  #   env_file: ../.env
  #   volumes:
  #     - postgres:/var/lib/postgresql/data

  # mongo:
  #   image: mongo
  #   restart: always
  #   env_file: ../.env
  #   volumes:
  #     - mongo:/data/db

  # redis:
  #   image: redis:6.0
  #   env_file: ../.env
  #   volumes:
  #     - redis:/data

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   env_file: ../.env
  #   network_mode: service:workspace

volumes:
  mariadb:
    driver: local
  # postgres:
  #   driver: local
  # mongo:
  #   driver: local
  # redis:
  #   driver: local
